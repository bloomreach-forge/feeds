<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013-2016 Hippo B.V. (http://www.onehippo.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean id="jaxrsRestFeedServiceQueryStringReplacingInterceptor" class="org.hippoecm.hst.jaxrs.cxf.QueryStringReplacingInterceptor">
    <property name="paramNameReplaces">
      <map>
        <!-- The following will replace '_format' parameter name with '_type' parameter name before JAX-RS processing.
        <entry key="_format" value="_type" />
        -->
      </map>
    </property>
    <property name="additionalQueryString">
      <value></value>
      <!-- The following will append additional query string before JAX-RS processing
      <value>addparam1=value1&amp;addparam2=value2</value>
      -->
    </property>
  </bean>

  <bean id="jaxrsRestFeedServiceInvoker" class="org.hippoecm.hst.jaxrs.cxf.AroundProcessableJAXRSInvoker">
    <property name="invokerPreprocessors">
      <list>
        <bean class="org.hippoecm.hst.jaxrs.cxf.SecurityAnnotationInvokerPreprocessor">
        </bean>
        <bean class="org.hippoecm.hst.jaxrs.cxf.PersistableAnnotationInvokerPreprocessor">
        </bean>
      </list>
    </property>
    <property name="invokerPostprocessors">
      <list>
        <bean class="org.hippoecm.hst.jaxrs.cxf.PersistableAnnotationInvokerPostprocessor">
        </bean>
      </list>
    </property>
  </bean>

  <bean id="jaxrsRestFeedServiceValve" class="org.hippoecm.hst.core.container.JaxrsRestServiceValve"
        init-method="initialize" destroy-method="destroy">
    <constructor-arg>
      <bean class="org.hippoecm.hst.jaxrs.cxf.CXFJaxrsContentService">
        <constructor-arg value="jaxrsContentService"/>
        <property name="servletPath" value=""/>
        <property name="jaxrsServerFactoryBean">
          <bean class="org.apache.cxf.jaxrs.JAXRSServerFactoryBean">
            <property name="address" value="/"/>
            <property name="providers" ref="jaxrsRestAllEntityProviders"/>
            <property name="resourceProviders" ref="jaxrsRestFeedResourceProviders"/>
            <!-- Configure the SecuredJAXRSInvoker if you need (javax.annotation.security based secured JAXRS methods.
                 Note: this requires a provided dependency on JEE 1.5 annotation spec, like geronimo-annotation_1.1_spec-1.1.jar
                       to be present, either through the JEE container or provided by the project 
            -->
            <property name="invoker" ref="jaxrsRestFeedServiceInvoker"/>
          </bean>
        </property>
        <property name="inInterceptors">
          <list>
            <ref bean="jaxrsRestFeedServiceQueryStringReplacingInterceptor"/>
          </list>
        </property>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="jaxrsRestFeedResourceProviders" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.apache.commons.collections.ListUtils"/>
    <property name="targetMethod" value="union"/>
    <property name="arguments">
      <list>
        <ref bean="customRestFeedResourceProviders"/>
        <ref bean="defaultRestFeedResourceProviders"/>
      </list>
    </property>
  </bean>

  <bean id="rssModifier" class="org.bloomreach.forge.feed.api.modifier.RSS20Modifier" scope="singleton"/>
  <bean id="atomModifier" class="org.bloomreach.forge.feed.api.modifier.Atom10Modifier" scope="singleton"/>
  <bean id="genericModifier" class="org.bloomreach.forge.feed.api.modifier.GenericModifier" scope="singleton"/>

  <bean id="jaxrsRSSResource" class="org.bloomreach.forge.feed.resource.RssSyndicationResource">
    <property name="modifier" ref="rssModifier"/>
  </bean>

  <bean id="jaxrsAtomResource" class="org.bloomreach.forge.feed.resource.AtomSyndicationResource">
    <property name="modifier" ref="atomModifier"/>
  </bean>

  <bean id="jaxrsGenericResource" class="org.bloomreach.forge.feed.resource.GenericSyndicationResource">
    <property name="modifier" ref="genericModifier"/>
  </bean>

  <bean id="defaultRestFeedResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg ref="jaxrsRSSResource"/>
        </bean>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg ref="jaxrsAtomResource"/>
        </bean>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg ref="jaxrsGenericResource"/>
        </bean>
      </list>
    </property>
  </bean>

  <!-- Default empty list of custom content resource providers to be overriden. -->
  <bean id="customRestFeedResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
      </list>
    </property>
  </bean>

  <!-- Pipelining -->

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="org.hippoecm.hst.core.container.Pipelines"/>
        <property name="propertyPath" value="pipelines"/>
      </bean>
    </property>
    <property name="targetMethod" value="put"/>
    <property name="arguments">
      <list>
        <value>JaxrsRestFeedPipeline</value>
        <bean class="org.hippoecm.hst.core.container.HstSitePipeline">
          <property name="initializationValves">
            <list>
              <ref bean="initializationValve"/>
              <ref bean="cmsSecurityValve"/>
            </list>
          </property>
          <property name="processingValves">
            <list>
              <ref bean="securityValve"/>
              <ref bean="subjectBasedSessionValve"/>
              <ref bean="noCacheResponseHeadersValve"/>
              <ref bean="jaxrsRestFeedServiceValve"/>
            </list>
          </property>
          <property name="cleanupValves">
            <list>
              <ref bean="cleanupValve"/>
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>

</beans>

